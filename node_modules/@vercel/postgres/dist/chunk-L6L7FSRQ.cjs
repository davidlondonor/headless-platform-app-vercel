"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _serverless = require('@neondatabase/serverless');var n=class extends Error{constructor(r,o){super(`VercelPostgresError - '${r}': ${o}`);this.code=r;this.name="VercelPostgresError"}};function c(e="pool"){let t;switch(e){case"pool":{t=process.env.POSTGRES_URL;break}case"direct":{t=process.env.POSTGRES_URL_NON_POOLING;break}default:{let o=e;throw new n("invalid_connection_type",`Unhandled type: ${o}`)}}return t==="undefined"&&(t=void 0),t}function m(e){return e.includes("-pooler.")}function y(e){return!m(e)}function p(e){try{let t=e.startsWith("postgresql://")?e.replace("postgresql://","https://"):e;return new URL(t).hostname==="localhost"}catch(t){if(t instanceof TypeError||typeof t=="object"&&t!==null&&"message"in t&&typeof t.message=="string"&&t.message==="Invalid URL")return!1;throw t}}function u(e,...t){var o,s;if(!f(e)||!Array.isArray(t))throw new n("incorrect_tagged_template_call","It looks like you tried to call `sql` as a function. Make sure to use it as a tagged template.\n	Example: sql`SELECT * FROM users`, not sql('SELECT * FROM users')");let r=(o=e[0])!=null?o:"";for(let l=1;l<e.length;l++)r+=`$${l}${(s=e[l])!=null?s:""}`;return[r,t]}function f(e){return Array.isArray(e)&&"raw"in e&&Array.isArray(e.raw)}var a=class extends _serverless.Client{async sql(t,...r){let[o,s]=u(t,...r);return this.query(o,s)}};function b(e){var r;let t=(r=e==null?void 0:e.connectionString)!=null?r:c("direct");if(!t)throw new n("missing_connection_string","You did not supply a 'connectionString' and no 'POSTGRES_URL_NON_POOLING' env var was found.");if(!p(t)&&!y(t))throw new n("invalid_connection_string","This connection string is meant to be used with a pooled connection. Try `createPool()` instead.");return new a({...e,connectionString:t})}var d=class extends _serverless.Pool{constructor(){super(...arguments);this.Client=a}async sql(r,...o){let[s,l]=u(r,...o);return this.query(s,l)}connect(r){return super.connect(r)}};function g(e){var o;let t=(o=e==null?void 0:e.connectionString)!=null?o:c("pool");if(!t)throw new n("missing_connection_string","You did not supply a 'connectionString' and no 'POSTGRES_URL' env var was found.");if(!p(t)&&!m(t))throw new n("invalid_connection_string","This connection string is meant to be used with a direct connection. Make sure to use a pooled connection string or try `createClient()` instead.");let r=e==null?void 0:e.maxUses;return typeof EdgeRuntime!="undefined"&&(r&&r!==1&&console.warn("@vercel/postgres: Overriding `maxUses` to 1 because the EdgeRuntime does not support client reuse."),r=1),new d({...e,connectionString:t,maxUses:r})}var i,C= exports.f =new Proxy(()=>{},{get(e,t){i||(i=g());let r=Reflect.get(i,t);return typeof r=="function"?r.bind(i):r},apply(e,t,r){return i||(i=g()),i.sql(...r)}}),N= exports.g =C;exports.a = c; exports.b = a; exports.c = b; exports.d = d; exports.e = g; exports.f = C; exports.g = N;
