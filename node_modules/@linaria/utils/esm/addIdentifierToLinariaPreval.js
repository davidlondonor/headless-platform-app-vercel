import { createId } from './createId';
import { reference } from './scopeHelpers';
function getOrAddLinariaPreval(scope) {
  const rootScope = scope.getProgramParent();
  let object = rootScope.getData('__linariaPreval');
  if (object) {
    return object;
  }
  const prevalExport = {
    type: 'ExpressionStatement',
    expression: {
      type: 'AssignmentExpression',
      operator: '=',
      left: {
        type: 'MemberExpression',
        object: createId('exports'),
        property: createId('__linariaPreval'),
        computed: false
      },
      right: {
        type: 'ObjectExpression',
        properties: []
      }
    }
  };
  const programPath = rootScope.path;
  const [inserted] = programPath.pushContainer('body', [prevalExport]);
  object = inserted.get('expression.right');
  rootScope.setData('__linariaPreval', object);
  return object;
}
export function addIdentifierToLinariaPreval(scope, name) {
  const rootScope = scope.getProgramParent();
  const object = getOrAddLinariaPreval(rootScope);
  const newProperty = {
    type: 'ObjectProperty',
    key: createId(name),
    value: createId(name),
    computed: false,
    shorthand: false
  };
  const [inserted] = object.pushContainer('properties', [newProperty]);
  reference(inserted.get('value'));
}
//# sourceMappingURL=addIdentifierToLinariaPreval.js.map