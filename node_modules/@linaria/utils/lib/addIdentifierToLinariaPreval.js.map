{"version":3,"file":"addIdentifierToLinariaPreval.js","names":["getOrAddLinariaPreval","scope","rootScope","getProgramParent","object","getData","prevalExport","type","expression","operator","left","createId","property","computed","right","properties","programPath","path","inserted","pushContainer","get","setData","addIdentifierToLinariaPreval","name","newProperty","key","value","shorthand","reference"],"sources":["../src/addIdentifierToLinariaPreval.ts"],"sourcesContent":["import type { NodePath, Scope } from '@babel/traverse';\nimport type {\n  ExpressionStatement,\n  Identifier,\n  ObjectExpression,\n  ObjectProperty,\n  Program,\n} from '@babel/types';\n\nimport { createId } from './createId';\nimport { reference } from './scopeHelpers';\n\nfunction getOrAddLinariaPreval(scope: Scope): NodePath<ObjectExpression> {\n  const rootScope = scope.getProgramParent();\n  let object = rootScope.getData('__linariaPreval');\n  if (object) {\n    return object;\n  }\n\n  const prevalExport: ExpressionStatement = {\n    type: 'ExpressionStatement',\n    expression: {\n      type: 'AssignmentExpression',\n      operator: '=',\n      left: {\n        type: 'MemberExpression',\n        object: createId('exports'),\n        property: createId('__linariaPreval'),\n        computed: false,\n      },\n      right: {\n        type: 'ObjectExpression',\n        properties: [],\n      },\n    },\n  };\n\n  const programPath = rootScope.path as NodePath<Program>;\n  const [inserted] = programPath.pushContainer('body', [prevalExport]);\n  object = inserted.get('expression.right') as NodePath<ObjectExpression>;\n  rootScope.setData('__linariaPreval', object);\n  return object;\n}\n\nexport function addIdentifierToLinariaPreval(scope: Scope, name: string) {\n  const rootScope = scope.getProgramParent();\n  const object = getOrAddLinariaPreval(rootScope);\n  const newProperty: ObjectProperty = {\n    type: 'ObjectProperty',\n    key: createId(name),\n    value: createId(name),\n    computed: false,\n    shorthand: false,\n  };\n\n  const [inserted] = object.pushContainer('properties', [newProperty]);\n  reference(inserted.get('value') as NodePath<Identifier>);\n}\n"],"mappings":";;;;;;AASA;AACA;AAEA,SAASA,qBAAqB,CAACC,KAAY,EAA8B;EACvE,MAAMC,SAAS,GAAGD,KAAK,CAACE,gBAAgB,EAAE;EAC1C,IAAIC,MAAM,GAAGF,SAAS,CAACG,OAAO,CAAC,iBAAiB,CAAC;EACjD,IAAID,MAAM,EAAE;IACV,OAAOA,MAAM;EACf;EAEA,MAAME,YAAiC,GAAG;IACxCC,IAAI,EAAE,qBAAqB;IAC3BC,UAAU,EAAE;MACVD,IAAI,EAAE,sBAAsB;MAC5BE,QAAQ,EAAE,GAAG;MACbC,IAAI,EAAE;QACJH,IAAI,EAAE,kBAAkB;QACxBH,MAAM,EAAE,IAAAO,kBAAQ,EAAC,SAAS,CAAC;QAC3BC,QAAQ,EAAE,IAAAD,kBAAQ,EAAC,iBAAiB,CAAC;QACrCE,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLP,IAAI,EAAE,kBAAkB;QACxBQ,UAAU,EAAE;MACd;IACF;EACF,CAAC;EAED,MAAMC,WAAW,GAAGd,SAAS,CAACe,IAAyB;EACvD,MAAM,CAACC,QAAQ,CAAC,GAAGF,WAAW,CAACG,aAAa,CAAC,MAAM,EAAE,CAACb,YAAY,CAAC,CAAC;EACpEF,MAAM,GAAGc,QAAQ,CAACE,GAAG,CAAC,kBAAkB,CAA+B;EACvElB,SAAS,CAACmB,OAAO,CAAC,iBAAiB,EAAEjB,MAAM,CAAC;EAC5C,OAAOA,MAAM;AACf;AAEO,SAASkB,4BAA4B,CAACrB,KAAY,EAAEsB,IAAY,EAAE;EACvE,MAAMrB,SAAS,GAAGD,KAAK,CAACE,gBAAgB,EAAE;EAC1C,MAAMC,MAAM,GAAGJ,qBAAqB,CAACE,SAAS,CAAC;EAC/C,MAAMsB,WAA2B,GAAG;IAClCjB,IAAI,EAAE,gBAAgB;IACtBkB,GAAG,EAAE,IAAAd,kBAAQ,EAACY,IAAI,CAAC;IACnBG,KAAK,EAAE,IAAAf,kBAAQ,EAACY,IAAI,CAAC;IACrBV,QAAQ,EAAE,KAAK;IACfc,SAAS,EAAE;EACb,CAAC;EAED,MAAM,CAACT,QAAQ,CAAC,GAAGd,MAAM,CAACe,aAAa,CAAC,YAAY,EAAE,CAACK,WAAW,CAAC,CAAC;EACpE,IAAAI,uBAAS,EAACV,QAAQ,CAACE,GAAG,CAAC,OAAO,CAAC,CAAyB;AAC1D"}